#!/usr/bin/env python

import yaml
import os,sys
import argparse
import datetime

def load_yaml(file_path):
    with open(file_path, 'r') as file:
        return yaml.safe_load(file)

def save_yaml(data, file_path):
    with open(file_path, 'w') as file:
        yaml.safe_dump(data, file, default_flow_style=False)

def yes_or_no(question):
    yn = input(question.replace("?","").strip()+" (y/n)? ")
    while yn.lower() not in ['y','n'] :
        yn = input("Please type 'y' or 'n'? ")
    return yn

def main():

    parser = argparse.ArgumentParser(
        description="DESI spectroscopic calibration configuration editor",
    )
    parser.add_argument('yaml_file', type = str,
                        help = 'path of yaml file to modify')

    args        = parser.parse_args()
    if not os.path.isfile(args.yaml_file) :
        print(f"The file {args.yaml_file} does not exist.")
        return

    data = load_yaml(args.yaml_file)
    camids = list(data.keys())
    if len(camids) == 0 :
        print("There are no entries in the YAML file. There needs to be at least one defining the camera id")
        sys.exit(12)
    if len(camids) > 1 :
        camid=input(f"Which camid do you want to edit among {camids}? ")
        while camid not in camids :
            camid=input(f"Please choose one among {camids}? ")
    else :
        camid=camids[0]
    camid_data=data[camid]

    configuration_names = list(camid_data.keys())
    print(f"Current configuration names for {camid} in the YAML file:")
    print(configuration_names)

    if yes_or_no("Do you want to create a new configuration?") == "y" :
        config_name=datetime.datetime.now().strftime('V%Y%m%d')
        iterator=1
        while config_name in configuration_names :
            config_name=datetime.datetime.now().strftime('V%Y%m%d')+f"-{iter}"
            iterator += 1

        while yes_or_no(f"Is '{config_name}' OK?")=="n" :
            while True :
                config_name=input("Enter a new config name: ")
                if config_name in configuration_names :
                    print(f"Sorry {config_name} already exists")
                else :
                    break
        print(config_name)
        previous_config_name=configuration_names[0]
        yn = yes_or_no(f"Do you want to start from a copy of '{previous_config_name}' ?")
        if yn == "n" :
            while True :
                previous_config_name=input(f"Choose a previous configuration among {configuration_names}: ")
                if previous_config_name not in configuration_names :
                    print(f"'{previous_config_name}' is not in the list.")
                else :
                    break
        print(f"Starting from a copy of '{previous_config_name}' to '{config_name}'")
        camid_data[config_name]=camid_data[previous_config_name].copy()
    else :
        while True :
            config_name=input(f"Pick a configuration to modify: ")
            if config_name not in configuration_names :
                print(f"'{config_name}' is not in the list:")
                print(configuration_names)
            else :
                break
        print(f"Will edit '{config_name}'")

    configuration_data=camid_data[config_name]
    print()
    for key,val in configuration_data.items() :
        print(f'{key}:{val}')
    print()
    for key,val in configuration_data.items() :
        print(f'{key}:{val}')
        krm=input('(k)eep,(r)emove or (m)odify ? ')
        while krm.lower() not in ['k','r','m'] :
            krm = input("Please type 'k', 'r' or 'm'? ")
        sys.exit(12)


    sys.exit(12)

    #print("Updated content of the YAML file:")
    #print(yaml.dump(data, default_flow_style=False))
    #save_yaml(data, file_path)
    #print(f"Changes saved to {file_path}")

if __name__ == "__main__":
    main()
